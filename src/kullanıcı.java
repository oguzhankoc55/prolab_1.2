/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Arslan
 */

/*
Bilgisayar ve kullanÄ±cÄ± olmak Ã¼zere oyunu oynayan iki oyuncu olacaktÄ±r. Bu iki oyuncunun
farklÄ± ve aynÄ± Ã¶zellikleri olacaktÄ±r. AynÄ± Ã¶zelliklerini temsil etmek iÃ§in Oyuncu temel sÄ±nÄ±fÄ±
oluÅŸturulacaktÄ±r.
Bu sÄ±nÄ±fta bulunnmasÄ± gereken Ã¶zellikler ve fonksiyonlar:
ï‚· oyuncuID, oyuncuAdi ve Skor Ã¶zellikleri olmalÄ±.
ï‚· YapÄ±cÄ± (constuctor) metotlarÄ± (parametreli ve parametresiz olarak en az iki) yazÄ±lacak.
Parametreler oyuncuID, oyuncuAdi ve Skor olmalÄ±.
ï‚· kartListes@Override
	i Ã¶zelliÄŸi ile oyuncularÄ±n elinde bulunan kartlar listede tutulacaktÄ±r.
ï‚· SkorGoster() fonksiyonu ile oyuncularÄ±n skorlarÄ± gÃ¶sterilecektir.
ï‚· kartSec() fonksiyonu yazÄ±lmalÄ± fakat bu sÄ±nÄ±f bilgisayar ve kullanÄ±cÄ± iÃ§in farklÄ± durumlarda
Ã§alÄ±ÅŸacaÄŸÄ± unutulmamalÄ±dÄ±r. 
*/
public class kullanıcı extends oyuncu{
    
    public  int scor;

    

     
    public kullanıcı(int oyuncuNo,String oyuncuIsim,int puan){     
        super(oyuncuNo,oyuncuIsim,puan);
    }
    
    
    @Override
    public int getOyuncuID(){
        return oyuncuID;
    }
    @Override
    public void setOyuncuID(int oyuncuID){
        this.oyuncuID=oyuncuID;
    }
    @Override
    public String getOyuncuAdi(){
        return oyuncuAdi;
    }
    @Override
    public void setOyuncuAdi(String oyuncuAdi){
        this.oyuncuAdi=oyuncuAdi;
    }
    @Override
    public int getScor(){
        return scor;
    }
    @Override
    public void setScor(int scor){
        this.scor=scor;
    }
    @Override
    public void puanEkle() {
    	this.scor+=10;
    }
    
    
    
    
}
